name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - '**'
    tags:
      - '*'

permissions:
  contents: read

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_dev:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to Cloudflare Pages (development branch)
        run: npx wrangler pages deploy build --project-name=docusaurus-tangibleplugins --branch=development

  deploy_prod:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to Cloudflare Pages (main branch via tag)
        run: npx wrangler pages deploy build --project-name=docusaurus-tangibleplugins --branch=main

  algolia_crawl:
    if: startsWith(github.ref, 'refs/tags/')
    needs: deploy_prod
    runs-on: ubuntu-latest
    env:
      APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
      ALGOLIA_WRITE_API_KEY: ${{ secrets.ALGOLIA_WRITE_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update -qy
          sudo apt-get install -y jq

      - name: Run Algolia Crawler for Indexing
        run: |
          CONFIG_JSON=$(jq -r tostring < config.json)
          docker run -i \
            -e "CONFIG=$CONFIG_JSON" \
            -e "APPLICATION_ID=$APPLICATION_ID" \
            -e "API_KEY=$ALGOLIA_WRITE_API_KEY" \
            algolia/docsearch-scraper
